[package]
name = "open-coroutine-hook"
version = "0.5.0"
edition = "2021"
authors = ["zhangzicheng@apache.org"]
description = "The syscall hook for open-coroutine"
repository = "https://github.com/acl-dev/open-coroutine/tree/dev/open-coroutine-hooks"
keywords = ["open-coroutine", "hook", "syscall"]
categories = ["os", "concurrency", "asynchronous"]
license = "Apache-2.0"
readme = "/README.md"

[dependencies]
once_cell = "1.19.0"
open-coroutine-core = { version = "0.5.0", path = "../core", features = [
    "syscall"], default-features = false }

[target.'cfg(unix)'.dependencies]
libc = "0.2"

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.59.0", features = [
    "Win32_Foundation",
    "Win32_System_Diagnostics_Debug",
    "Win32_System_Threading",
    "Win32_Security",
    "Win32_System_LibraryLoader",
    "Win32_System_SystemServices"
] }
retour = { version = "0.3.1", features = ["static-detour"] }

[features]
# Provide preemptive scheduling implementation.
# Enable for default.
preemptive = ["open-coroutine-core/preemptive"]

# Provide net API abstraction and implementation.
net = ["open-coroutine-core/net"]

# Provide io_uring adaptation, this feature only works in linux.
io_uring = ["open-coroutine-core/io_uring"]

# Provide syscall implementation.
syscall = ["open-coroutine-core/syscall"]

default = ["open-coroutine-core/default"]

[lib]
crate-type = ["cdylib"]
