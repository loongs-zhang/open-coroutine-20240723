[package]
name = "open-coroutine-core"
version = "0.5.0"
edition = "2021"
authors = ["zhangzicheng@apache.org"]
description = "The open-coroutine is a simple, efficient and generic coroutine library."
repository = "https://github.com/acl-dev/open-coroutine"
keywords = ["runtime", "coroutine", "hook", "preempt", "work-steal"]
categories = ["concurrency", "asynchronous", "os", "network-programming", "wasm"]
license = "Apache-2.0"
readme = "/README.md"

[dependencies]
cfg-if = "1.0.0"
once_cell = "1.19"
dashmap = "6.0"
num_cpus = "1.16"
tracing = { version = "0.1", default-features = false, optional = true }
tracing-subscriber = { version = "0.3", default-features = false, features = [
    "fmt",
    "local-time"
], optional = true }
time = { version = "0.3", optional = true }
derivative = { version = "2.2", optional = true }
core_affinity = { version = "0.8", optional = true }
crossbeam-utils = { version = "0.8", optional = true }

[target.'cfg(unix)'.dependencies]
libc = "0.2"
mio = { version = "1.0", default-features = false, features = [
    "net",
    "os-poll",
    "os-ext",
], optional = true }

[target.'cfg(target_os = "linux")'.dependencies]
io-uring = { version = "0.6", optional = true }

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.59", features = [
    "Win32_Foundation",
    "Win32_System_Kernel",
    "Win32_System_Threading",
    "Win32_System_SystemInformation",
    "Win32_System_Diagnostics_Debug",
] }
polling = { version = "2.8.0", optional = true }
retour = { version = "0.3", features = ["static-detour"] }

[build-dependencies]
cfg-if = "1.0.0"

[target.'cfg(target_os = "linux")'.build-dependencies]
cc = "1.1"

[dev-dependencies]
anyhow = "1.0"
slab = "0.4"

[features]
# Print some help log.
# Enable for default.
log = ["tracing", "tracing-subscriber", "time"]

# Provide preemptive scheduling implementation.
# Enable for default.
preemptive = []

# Provide net API abstraction and implementation.
net = ["polling", "mio", "derivative", "crossbeam-utils", "core_affinity"]

# Provide io_uring adaptation, this feature only works in linux.
io_uring = ["net", "io-uring"]

# Provide syscall implementation.
syscall = ["net"]

default = ["log", "syscall"]